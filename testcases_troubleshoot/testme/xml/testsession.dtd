<!--                                                                        -->
<!--                                                                        -->
<!--  This file is part of the Frama-C plug-in 'PathCrawler' (pc).          -->
<!--                                                                        -->
<!--  Copyright (C) 2007-2023                                               -->
<!--    CEA (Commissariat à l'énergie atomique et aux énergies              -->
<!--         alternatives)                                                  -->
<!--                                                                        -->
<!--  All rights reserved.                                                  -->
<!--  Contact CEA LIST for licensing.                                       -->
<!--                                                                        -->
<!--                                                                        -->

<!-- Test Session: contains 
  Test Session Data and PrefixData for each considered path prefix -->
<!ELEMENT TestSession (SessionData,PrefixData*)>

<!-- Test Session Data: contains
  Function Name, Strategy and time When this generation session started -->
<!ELEMENT SessionData (FunName,Strategy,When,Version,TestReportFile,TestSessionFile)>
<!ELEMENT FunName (#PCDATA)>
<!-- Strategy: contains 3 required attributes and optional text in body 
(function name in case of func scope) -->
<!ELEMENT Strategy (#PCDATA)>
<!ATTLIST Strategy Coverage CDATA #REQUIRED>
<!ATTLIST Strategy IterLimit CDATA #REQUIRED>
<!ATTLIST Strategy RecurLimit CDATA #REQUIRED>
<!ATTLIST Strategy SuffixLengthLimit CDATA #REQUIRED>
<!ELEMENT When (#PCDATA)>
<!ELEMENT Version (#PCDATA)>

<!ELEMENT PrefixData (Time,Dur,Prefix,Suffix?,PrefixStatus,TestCaseFile?,Verdict?)>
<!-- Prefix Number: prefixed by a 'P_'-->
<!ATTLIST PrefixData PrefixID ID #REQUIRED>
<!-- Test Case Number: prefixed by a 'TC_', unique for this session-->
<!ATTLIST PrefixData TestCaseID CDATA #IMPLIED>

<!-- ATTN: consistency with io.pl -->
<!ELEMENT PrefixStatus (#PCDATA)>
<!ATTLIST PrefixStatus Status (covered|timeout|infeasible|assume_violated|iteration_limit_violated|no_extra_coverage|PC_bug|untreated|subsumed) #REQUIRED>

<!ELEMENT Time (#PCDATA)>
<!ELEMENT Dur (#PCDATA)>

<!-- Path: Sequence of positive (P) and negative (N) conditions denoted 
  by line numbers with optional attributes containing source file name 
  for the first node or when different from the previous node,
  and Label Indentifier (LID) when the condition comes from a label -->
<!ELEMENT Prefix ((P|N)*)>
<!ELEMENT Suffix ((P|N)*)>
<!ELEMENT P (#PCDATA)>
<!ATTLIST P SrcFile CDATA #IMPLIED>
<!ATTLIST P BlocID CDATA #IMPLIED>
<!ATTLIST P LID CDATA #IMPLIED>
<!ELEMENT N (#PCDATA)>
<!ATTLIST N SrcFile CDATA #IMPLIED>
<!ATTLIST N BlocID CDATA #IMPLIED>
<!ATTLIST N LID CDATA #IMPLIED>

<!-- Separate XML file containing test case data -->
<!ELEMENT TestCaseFile (#PCDATA)>

<!-- Separate XML file containing test session file -->
<!ELEMENT TestSessionFile (#PCDATA)>

<!-- Separate XML file containing test report file -->
<!ELEMENT TestReportFile (#PCDATA)>

<!-- Verdict: contains one required attribute and optional text in body 
(line number for assert_violated, message for failure, etc.) -->
<!-- ATTN: consistency with io.pl -->
<!ELEMENT Verdict (#PCDATA)>
<!ATTLIST Verdict Type (success|unknown|failure|assert_violated|assert_violated_in_oracle|crashed|hung|interrupt|bug_oracle|maybe_success|maybe_unknown|maybe_failure|invalid_memory_access|deref_null_pointer|use_after_free|div_by_0|uninit_var|invalid_arg|error|no_extra_coverage|none) #REQUIRED>

<!-- PathPredicate: List of constraints of the path predicate
  with optional attributes containing source file name (SrcFile)
  for the first node or when different from the previous node, line (L)
  and label indentifier (LID) when the condition comes from a label -->
<!ELEMENT PathPredicate (Ctr*)>
<!ELEMENT Ctr (#PCDATA)>
<!ATTLIST Ctr L CDATA #IMPLIED>
<!ATTLIST Ctr SrcFile CDATA #IMPLIED>
<!ATTLIST Ctr LID CDATA #IMPLIED>
